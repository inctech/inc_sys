CREATE VIEW v_userauth AS 
SELECT 
  ur.userid username,
  r.rolename authority 
FROM
  s_user_role ur 
  JOIN s_role r 
    ON ur.roleid = r.roleid 
UNION
SELECT 
  userid AS username,
  'jobseeker' AS authority 
FROM
  b_user
    
The type org.springframework.context.ConfigurableApplicationContext cannot be resolved
	mvn dependency:purge-local-repository

Data Valid
@Null	限制只能为null
@NotNull	限制必须不为null
@AssertFalse	限制必须为false
@AssertTrue	限制必须为true
@DecimalMax(value)	限制必须为一个不大于指定值的数字
@DecimalMin(value)	限制必须为一个不小于指定值的数字
@Digits(integer,fraction)	限制必须为一个小数，且整数部分的位数不能超过integer，小数部分的位数不能超过fraction
@Future	限制必须是一个将来的日期
@Max(value)	限制必须为一个不大于指定值的数字
@Min(value)	限制必须为一个不小于指定值的数字
@Past	限制必须是一个过去的日期
@Pattern(value)	限制必须符合指定的正则表达式
@Size(max,min)	限制字符长度必须在min到max之间
@Past	验证注解的元素值（日期类型）比当前时间早
@NotEmpty	验证注解的元素值不为null且不为空（字符串长度不为0、集合大小不为0）
@NotBlank	验证注解的元素值不为空（不为null、去除首位空格后长度为0），不同于@NotEmpty，@NotBlank只应用于字符串且在比较时会去除字符串的空格


空检查
@Null       验证对象是否为null
@NotNull    验证对象是否不为null, 无法查检长度为0的字符串
@NotBlank 检查约束字符串是不是Null还有被Trim的长度是否大于0,只对字符串,且会去掉前后空格.
@NotEmpty 检查约束元素是否为NULL或者是EMPTY.
 
Booelan检查
@AssertTrue     验证 Boolean 对象是否为 true  
@AssertFalse    验证 Boolean 对象是否为 false  
 
长度检查
@Size(min=, max=) 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内  
@Length(min=, max=) Validates that the annotated string is between min and max included.
 
日期检查
@Past           验证 Date 和 Calendar 对象是否在当前时间之前  
@Future     验证 Date 和 Calendar 对象是否在当前时间之后  
@Pattern    验证 String 对象是否符合正则表达式的规则
 
数值检查，建议使用在Stirng,Integer类型，不建议使用在int类型上，因为表单值为“”时无法转换为int，但可以转换为Stirng为"",Integer为null
@Min            验证 Number 和 String 对象是否大等于指定的值  
@Max            验证 Number 和 String 对象是否小等于指定的值  
@DecimalMax 被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.小数存在精度
@DecimalMin 被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.小数存在精度
@Digits     验证 Number 和 String 的构成是否合法  
@Digits(integer=,fraction=) 验证字符串是否是符合指定格式的数字，interger指定整数精度，fraction指定小数精度。
 
@Range(min=, max=) 检查数字是否介于min和max之间.
@Range(min=10000,max=50000,message="range.bean.wage")
private BigDecimal wage;
 
@Valid 递归的对关联对象进行校验, 如果关联对象是个集合或者数组,那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.(是否进行递归验证)
@CreditCardNumber信用卡验证
@Email  验证是否是邮件地址，如果为null,不进行验证，算通过验证。
@ScriptAssert(lang= ,script=, alias=)
@URL(protocol=,host=, port=,regexp=, flags=)

public String send_sms(String desc_mobile) {
		String phoneNumber = desc_mobile;//"17615182526";
	    String randomNum = randomNum4();
	    String jsonContent = "{\"code\":\"" + randomNum + "\"}";

	    Map<String, String> paramMap = new HashMap<>();
	    paramMap.put("PhoneNumbers", phoneNumber);
	    paramMap.put("SignName", sign_name);
	    paramMap.put("TemplateCode", template_code);
	    paramMap.put("TemplateParam", jsonContent);
	    SendSmsResponse sendSmsResponse;
		try {
			sendSmsResponse = sms.sendSms(paramMap);
			log.debug(sendSmsResponse.getBizId()+":"+sendSmsResponse.getCode()+":"+sendSmsResponse.getMessage());
		} catch (ClientException e) {
			e.printStackTrace();
			throw new AppSysException(SMS_SEND_CODE_ERROR);
		}
	    
	    /*if(!(sendSmsResponse.getCode() != null && sendSmsResponse.getCode().equals("OK"))) {
	        if(sendSmsResponse.getCode() == null) {//ud
	        }
	        if(!sendSmsResponse.getCode().equals("OK")) {//ud
	        }
	    }*/
	    return randomNum;
	}